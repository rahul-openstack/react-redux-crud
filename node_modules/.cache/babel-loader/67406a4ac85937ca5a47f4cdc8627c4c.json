{"ast":null,"code":"import { CREATE_TUTORIAL, RETRIEVE_TUTORIALS, UPDATE_TUTORIAL, DELETE_TUTORIAL, DELETE_ALL_TUTORIALS } from \"./types\";\nimport TutorialDataService from \"../services/tutorial.service\";\nexport const createTutorial = (title, description) => async dispatch => {\n  try {\n    const res = await TutorialDataService.create({\n      title,\n      description\n    });\n    dispatch({\n      type: CREATE_TUTORIAL,\n      payload: res.data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const retrieveTutorials = () => async dispatch => {\n  try {\n    const res = await TutorialDataService.getAll();\n    dispatch({\n      type: RETRIEVE_TUTORIALS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateTutorial = (id, data) => async dispatch => {\n  try {\n    const res = await TutorialDataService.update(id, data);\n    dispatch({\n      type: UPDATE_TUTORIAL,\n      payload: data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const deleteTutorial = id => async dispatch => {\n  try {\n    await TutorialDataService.delete(id);\n    dispatch({\n      type: DELETE_TUTORIAL,\n      payload: {\n        id\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteAllTutorials = () => async dispatch => {\n  try {\n    const res = await TutorialDataService.deleteAll();\n    dispatch({\n      type: DELETE_ALL_TUTORIALS,\n      payload: res.data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const findTutorialsByTitle = title => async dispatch => {\n  try {\n    const res = await TutorialDataService.findByTitle(title);\n    dispatch({\n      type: RETRIEVE_TUTORIALS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["D:/github/react-redux-crud/src/actions/tutorials.js"],"names":["CREATE_TUTORIAL","RETRIEVE_TUTORIALS","UPDATE_TUTORIAL","DELETE_TUTORIAL","DELETE_ALL_TUTORIALS","TutorialDataService","createTutorial","title","description","dispatch","res","create","type","payload","data","Promise","resolve","err","reject","retrieveTutorials","getAll","console","log","updateTutorial","id","update","deleteTutorial","delete","deleteAllTutorials","deleteAll","findTutorialsByTitle","findByTitle"],"mappings":"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","sourcesContent":["import {\n  CREATE_TUTORIAL,\n  RETRIEVE_TUTORIALS,\n  UPDATE_TUTORIAL,\n  DELETE_TUTORIAL,\n  DELETE_ALL_TUTORIALS\n} from \"./types\";\n\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport const createTutorial = (title, description) => async (dispatch) => {\n  try {\n    const res = await TutorialDataService.create({ title, description });\n\n    dispatch({\n      type: CREATE_TUTORIAL,\n      payload: res.data,\n    });\n\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const retrieveTutorials = () => async (dispatch) => {\n  try {\n    const res = await TutorialDataService.getAll();\n\n    dispatch({\n      type: RETRIEVE_TUTORIALS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const updateTutorial = (id, data) => async (dispatch) => {\n  try {\n    const res = await TutorialDataService.update(id, data);\n\n    dispatch({\n      type: UPDATE_TUTORIAL,\n      payload: data,\n    });\n\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const deleteTutorial = (id) => async (dispatch) => {\n  try {\n    await TutorialDataService.delete(id);\n\n    dispatch({\n      type: DELETE_TUTORIAL,\n      payload: { id },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deleteAllTutorials = () => async (dispatch) => {\n  try {\n    const res = await TutorialDataService.deleteAll();\n\n    dispatch({\n      type: DELETE_ALL_TUTORIALS,\n      payload: res.data,\n    });\n\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const findTutorialsByTitle = (title) => async (dispatch) => {\n  try {\n    const res = await TutorialDataService.findByTitle(title);\n\n    dispatch({\n      type: RETRIEVE_TUTORIALS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};"]},"metadata":{},"sourceType":"module"}